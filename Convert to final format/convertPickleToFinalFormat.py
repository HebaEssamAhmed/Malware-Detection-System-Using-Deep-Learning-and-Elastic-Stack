import numpy as np
import pickle as pkl
import networkx as nx
import scipy.sparse as sp
import os
def load_data2(fileName):
    adj = nx.adjacency_matrix(nx.from_dict_of_lists(pkl.load(open(fileName,'rb'))['adjacency']))
    features = sp.csr_matrix(pkl.load(open(fileName,'rb'))['features'],dtype=float).tolil()
    y_train = np.array(pkl.load(open(fileName,'rb'))['label'])
    #train_mask = sample_mask(range(len(y_train)), y_train.shape[0])
    return adj, features, y_train

# save
outputFolderName = 'output'
os.mkdir(outputFolderName)
for file in os.listdir('input'):
    adj, features, y_train = load_data2(os.path.join('input',file))
    currentFolder = os.path.join(outputFolderName,file)
    os.mkdir(currentFolder)
    sp.save_npz(os.path.join(currentFolder,'adj.npz'),adj)
    pkl.dump(features,open(os.path.join(currentFolder,'features.pickle'),'wb'))
    np.save(os.path.join(currentFolder,'y_train'), y_train)

'''
# load

adj = sp.load_npz('adj.npz')
y_train = np.load('y_train.npy')
features = pkl.load(open('features.pickle','rb'))
'''

